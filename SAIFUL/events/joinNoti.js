const fs = require("fs-extra");
const path = require("path");
const axios = require("axios");
const Canvas = require("canvas");

module.exports.config = {
  name: "joinnoti",
  version: "1.5.0",
  credits: "Maria + rX Abdullah + Saiful Islam + GPT-5 Layout Fix",
  description: "Welcome system showing only new member avatar, Bot Owner at bottom center",
  eventType: ["log:subscribe"],
  dependencies: {
    "canvas": "",
    "axios": "",
    "fs-extra": ""
  }
};

module.exports.run = async function ({ api, event, Users }) {
  const { threadID, logMessageData } = event;
  const added = logMessageData.addedParticipants?.[0];
  if (!added) return;

  const userID = added.userFbId;
  const userName = added.fullName;
  const botID = api.getCurrentUserID();
  const threadInfo = await api.getThreadInfo(threadID);
  const groupName = threadInfo.threadName;
  const memberCount = threadInfo.participantIDs.length;

  const adderID = event.author;
  const adderName = (await Users.getNameUser(adderID)) || "Unknown";

  const bgURL = "https://i.postimg.cc/rmkVVbsM/r07qxo-R-Download.jpg";
  const newUserAvatar = `https://graph.facebook.com/${userID}/picture?width=512&height=512`;

  const cacheDir = path.join(__dirname, "cache");
  fs.ensureDirSync(cacheDir);

  const bgPath = path.join(cacheDir, "bg.jpg");
  const newUserPath = path.join(cacheDir, `new_${userID}.png`);
  const outPath = path.join(cacheDir, `welcome_${userID}.png`);

  try {
    // üñºÔ∏è ‡¶á‡¶Æ‡ßá‡¶ú ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°
    const bgImg = (await axios.get(bgURL, { responseType: "arraybuffer" })).data;
    const userImg = (await axios.get(newUserAvatar, { responseType: "arraybuffer" })).data;

    fs.writeFileSync(bgPath, Buffer.from(bgImg));
    fs.writeFileSync(newUserPath, Buffer.from(userImg));

    // üé® ‡¶ï‡ßç‡¶Ø‡¶æ‡¶®‡¶≠‡¶æ‡¶∏ ‡¶§‡ßà‡¶∞‡¶ø
    const canvas = Canvas.createCanvas(800, 600);
    const ctx = canvas.getContext("2d");
    const background = await Canvas.loadImage(bgPath);
    ctx.drawImage(background, 0, 0, canvas.width, canvas.height);

    // Helper ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶á‡¶Æ‡ßá‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
    const drawRoundImage = async (path, x, y, size) => {
      const img = await Canvas.loadImage(path);
      ctx.save();
      ctx.beginPath();
      ctx.arc(x + size / 2, y + size / 2, size / 2, 0, Math.PI * 2);
      ctx.closePath();
      ctx.clip();
      ctx.drawImage(img, x, y, size, size);
      ctx.restore();
    };

    // ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶ø‡¶ï
    const userSize = 160;
    const userX = (canvas.width - userSize) / 2;
    const userY = 40;
    await drawRoundImage(newUserPath, userX, userY, userSize);

    ctx.textAlign = "center";

    // ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
    ctx.font = "bold 36px Arial";
    ctx.fillStyle = "#FFD700";
    ctx.fillText(userName, canvas.width / 2, userY + userSize + 50);

    // ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶®‡¶æ‡¶Æ
    ctx.font = "bold 30px Arial";
    ctx.fillStyle = "#00FFFF";
    ctx.fillText(groupName, canvas.width / 2, userY + userSize + 100);

    // ‡¶Æ‡ßã‡¶ü ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ
    ctx.font = "bold 28px Arial";
    ctx.fillStyle = "#FFFFFF";
    ctx.fillText(`‡¶Æ‡ßã‡¶ü ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø: ${memberCount}`, canvas.width / 2, userY + userSize + 150);

    // Bot Owner ‡¶®‡¶ø‡¶ö‡ßá ‡¶∏‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá
    ctx.font = "bold 28px Arial";
    ctx.fillStyle = "#FF1493";
    ctx.fillText("Bot Owner: Saiful Islam üíª", canvas.width / 2, canvas.height - 30);

    // ‡¶ö‡ßÇ‡ßú‡¶æ‡¶®‡ßç‡¶§ ‡¶á‡¶Æ‡ßá‡¶ú ‡¶∏‡ßá‡¶≠
    const finalBuffer = canvas.toBuffer();
    fs.writeFileSync(outPath, finalBuffer);

    const groupRules =
`üìú ùóöùó•ùó¢ùó®ùó£ ùó•ùó®ùóüùóòùó¶ üìú
‡ßßÔ∏è‚É£ ‡¶∏‡¶¨‡¶æ‡¶á‡¶ï‡ßá ‡¶∏‡¶Æ‡ßç‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡¶¨‡ßá üë•  
‡ß®Ô∏è‚É£ ‡¶∏‡ßç‡¶™‡ßç‡¶Ø‡¶æ‡¶Æ ‡¶¨‡¶æ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶®‡¶ø‡¶∑‡ßá‡¶ß üö´  
‡ß©Ô∏è‚É£ ‡¶¨‡¶æ‡¶ú‡ßá ‡¶≠‡¶æ‡¶∑‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶®‡¶æ ‚ö†Ô∏è  
‡ß™Ô∏è‚É£ ‡¶≠‡ßÅ‡ßü‡¶æ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¨‡¶æ ‡¶ó‡ßÅ‡¶ú‡¶¨ ‡¶®‡ßü ‚ùå  
‡ß´Ô∏è‚É£ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶∏‡¶ø‡¶¶‡ßç‡¶ß‡¶æ‡¶®‡ßç‡¶§‡¶á ‡¶ö‡ßÇ‡ßú‡¶æ‡¶®‡ßç‡¶§ üëë`;

    let message = {
      body: `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üéâ ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ @${userName}! üéâ
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üè∑Ô∏è ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™: ${groupName}  
üî¢ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶® ${memberCount} ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø  
üë§ ‡¶è‡¶° ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®: @${adderName}  
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üíñ ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ @${adderName} üíñ  
‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶£‡ßá @${userName} ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá! üéä
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
${groupRules}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üëë Bot Owner: Saiful Islam üíª
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
      mentions: [
        { tag: `@${userName}`, id: userID },
        { tag: `@${adderName}`, id: adderID }
      ],
      attachment: fs.createReadStream(outPath)
    };

    api.sendMessage(message, threadID, () => {
      fs.unlinkSync(bgPath);
      fs.unlinkSync(newUserPath);
      fs.unlinkSync(outPath);
    });

  } catch (error) {
    console.error("Joinnoti error:", error);
    api.sendMessage("‚öôÔ∏è ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶ì‡ßü‡ßá‡¶≤‡¶ï‡¶æ‡¶Æ ‡¶Æ‡¶°‡¶ø‡¶â‡¶≤‡ßá ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá ‚öôÔ∏è", threadID);
  }
};
